version: "3.9"

services:
  api:
    image: ghcr.io/nephrogo/nephrogo-api:latest
    env_file:
      - secrets/.env
    labels:
      - lt.nephrogo.api
    deploy:
      replicas: 2
      update_config:
        delay: 5s
        order: stop-first
    volumes:
      - static_volume:/srv/nephrogo-api/static
      - media_volume:/srv/nephrogo-api/media
      - /srv/nephrogo-api/secrets:/srv/nephrogo-api/secrets
    networks:
      - nginx_network
      - database_network
      - redis_network

  postgres:
    image: postgres:13.1
    env_file:
      - secrets/.env
    networks:
      - database_network
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
    labels:
      - lt.nephrogo.postgres
    deploy:
      restart_policy:
        condition: on-failure

  redis:
    image: redis:6.0
    networks:
      - redis_network
    labels:
      - lt.nephrogo.redis
    volumes:
      - redis_volume:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]

  nginx:
    image: nginx:1.19
    ports:
      - 80:80
      - 443:443
    volumes:
      - /srv/nephrogo-api/nginx/conf.d:/etc/nginx/conf.d
      - /srv/nephrogo-api/nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/srv/nephrogo-api/static
      - media_volume:/srv/nephrogo-api/media
    networks:
      - nginx_network
    labels:
      - lt.nephrogo.nginx

networks:
  nginx_network:
    driver: overlay
  database_network:
    driver: overlay
  redis_network:
    driver: overlay

volumes:
  postgres_volume:
  static_volume:
  media_volume:
  redis_volume:
